{{- $dot := . -}}
{{- $value := $dot.Values -}}
{{- $release := .Release.Name -}}
{{- $namespace := .Release.Namespace -}}
{{- $fullName := (include "fluent-sandbox.fullname" $dot) -}}
{{- $testName := printf "%s-test" $fullName -}}
{{- $fluentdInstance := (first $value.fluentd) -}}
{{- $fluentBitInstance := (first $value.fluentBit) -}}
{{- $fluentdName := $fluentdInstance.name -}}
{{- $fluentBitName := $fluentBitInstance.name -}}
{{- $forwardPort := (include "fluent-sandbox.defaultForwardPort" $dot) -}}
{{- $httpPort := (include "fluent-sandbox.defaultHttpPort" $dot) -}}
---
apiVersion: v1
kind: Pod
metadata:
  name: {{ $testName }}
  labels:
    app: test
    {{- include "fluent-sandbox.labels" $dot | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  serviceAccountName: {{ $testName }}
  restartPolicy: Never
  containers:
    - name: send
      image: fluent/fluentd:v1.18.0-debian-1.0
      securityContext:
        # for apt-get install
        runAsUser: 0
      command:
        - bash
      args:
        - "-c"
        - |
          set -ex

          apt-get update
          apt-get install -y curl
          # install kubectl
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          mv ./kubectl /usr/local/bin/kubectl
          kubectl version

          wait() {
            kubectl -n {{ $namespace }} wait --timeout=60s --for=condition=ready pod -l 'app.kubernetes.io/instance={{ $release }}' -l 'app!=test'
          }

          cnt=0
          while ! wait ; do
            if [ $cnt -gt 5 ] ; then
              exit 1
            fi
            sleep 10
            cnt=$((cnt+1))
          done

          export DEBUG=1
          FORWARD_PORT="{{ $forwardPort }}"
          HTTP_PORT="{{ $httpPort }}"

          FLUENTD="{{ $fluentdName }}"
          echo '{"msg":"CAT"}' | send "$FLUENTD" "$FORWARD_PORT" cat test.cat
          send "$FLUENTD" "$HTTP_PORT" http /test.http -d 'json={"msg":"HTTP"}'

          FLUENT_BIT="{{ $fluentBitName }}"
          echo '{"msg":"CAT"}' | send "$FLUENT_BIT" "$FORWARD_PORT" cat test.cat
          send "$FLUENT_BIT" "$HTTP_PORT" http /test.http -d 'json={"msg":"HTTP"}'
      volumeMounts:
        - name: test-conf
          mountPath: /usr/local/bin/send
          readOnly: true
          subPath: send.sh
  volumes:
    - name: test-conf
      configMap:
        defaultMode: 0777
        name: {{ $testName }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $testName }}
  labels:
    {{- include "fluent-sandbox.labels" . | nindent 4 }}
data:
  send.sh: |-
    {{- tpl (.Files.Get "files/usr/local/bin/send.sh") . | nindent 4 }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $testName }}
  namespace: {{ $namespace }}
  labels:
    {{- include "fluent-sandbox.labels" . | nindent 4 }}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ $testName }}
  namespace: {{ $namespace }}
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ $testName }}
  namespace: {{ $namespace }}
subjects:
- kind: ServiceAccount
  name: {{ $testName }}
roleRef:
  kind: Role
  name: {{ $testName }}
  apiGroup: rbac.authorization.k8s.io
